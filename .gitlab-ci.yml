variables:
  rpm_release: "0.$CI_PIPELINE_ID"
  specfile: $project.spec
  other_repos: $yum_repo_url/redhawk-dependencies
  redhawk_version: '2.1.2'

stages:
 - package-redhawk-codegen
 - package-bulkio-gpp
 - package-burstio-fei
 - deploy

.rpmbuild: &rpmbuild
  image: docker:latest
  tags:
    - dind
  script:
    # Ensure newest version of FROM image
    - docker pull ${docker_registry}${rpmbuild_repository}rpmbuild:${dist}-${arch}-onbuild
    # Use RPM release from specfile if this is a tag
    - if [ -n "$CI_COMMIT_TAG" ]; then rpm_release=""; fi
    - if [ -f output/repo.tar.gz ]; then cd output; tar xvf repo.tar.gz; cd -; cp -r output $project; fi
    - cd $project
    - printf "FROM ${docker_registry}${rpmbuild_repository}rpmbuild:${dist}-${arch}-onbuild" > Dockerfile
    # Don't build redhawk tests as part of rpmbuild to save time
    - if [ "$project" == "redhawk" ]; then sed -i 's|testing||' src/Makefile.am; fi
    - proj_lower=$(echo $project | tr '[:upper:]' '[:lower:]')
    - safe_ref=$(echo ${CI_COMMIT_REF_NAME} | tr -d /| tr '[:upper:]' '[:lower:]')
    - docker build --tag=${docker_registry}redhawk-rpmbuild:$proj_lower-$safe_ref-${dist}-${arch}
                   --build-arg "project=$project"
                   --build-arg "arch=$arch"
                   --build-arg "spec_file=$specfile"
                   --build-arg "rpm_release=$rpm_release"
                   --build-arg "other_repos=$other_repos/$dist/$arch"
                   --build-arg "local_repo=$local_repo" .
    # Create a yum repository from the packages we just built and any packages we've built in a previous stage
    - id=$(docker create -it ${docker_registry}redhawk-rpmbuild:$proj_lower-$safe_ref-$dist-$arch bash -lc 'mkdir -p /tmp/repo;
                                                for file in `find /usr/src/yum /root/rpmbuild/RPMS -name '*.rpm'`; do
                                                cp -v $file /tmp/repo;
                                                done;
                                                cd /tmp/repo;
                                                createrepo .;
                                                tar czf repo.tar.gz *')
    - docker start -a $id
    #Cleanup any previous output we've inherited
    - cd $CI_PROJECT_DIR
    - rm -rf output && mkdir output
    - docker cp $id:/tmp/repo/repo.tar.gz output/repo.tar.gz
    - docker rm -f $id || true
  artifacts:
    name: $CI_JOB_NAME
    paths:
      - output/
    expire_in: 2 days
  #Skip on tag of following format
  except:
    - /^(\d+\.)?(\d+)?(\.\d+)$/
    - master

redhawk:el6-i386:
  stage: package-redhawk-codegen
  variables:
    dist: el6
    arch: i686
    project: redhawk
    specfile: src/releng/redhawk.spec
    local_repo: ""
  <<: *rpmbuild

redhawk-codegen:el6-i386:
  stage: package-redhawk-codegen
  variables:
    dist: el6
    arch: i686
    project: redhawk-codegen
    local_repo: ""
  <<: *rpmbuild

bulkio:el6-i386:
  stage: package-bulkio-gpp
  dependencies:
    - redhawk:el6-i386
  variables:
    dist: el6
    arch: i686
    project: bulkioInterfaces
    local_repo: output
  <<: *rpmbuild

gpp:el6-i386:
  stage: package-bulkio-gpp
  dependencies:
    - redhawk:el6-i386
  variables:
    dist: el6
    arch: i686
    project: GPP
    local_repo: output
  <<: *rpmbuild

burstio:el6-i386:
  stage: package-burstio-fei
  dependencies:
    - bulkio:el6-i386
  variables:
    dist: el6
    arch: i686
    project: burstioInterfaces
    local_repo: output
  <<: *rpmbuild

frontend:el6-i386:
  stage: package-burstio-fei
  dependencies:
    - bulkio:el6-i386
  variables:
    dist: el6
    arch: i686
    project: frontendInterfaces
    version: $fei_version
    local_repo: output
  <<: *rpmbuild

redhawk:el6:
  stage: package-redhawk-codegen
  variables:
    dist: el6
    arch: x86_64
    project: redhawk
    specfile: src/releng/redhawk.spec
    local_repo: ""
  <<: *rpmbuild

redhawk-codegen:el6:
  stage: package-redhawk-codegen
  variables:
    dist: el6
    arch: x86_64
    project: redhawk-codegen
    local_repo: ""
  <<: *rpmbuild

bulkio:el6:
  stage: package-bulkio-gpp
  dependencies:
    - redhawk:el6
  variables:
    dist: el6
    arch: x86_64
    project: bulkioInterfaces
    local_repo: output
  <<: *rpmbuild

gpp:el6:
  stage: package-bulkio-gpp
  dependencies:
    - redhawk:el6
  variables:
    dist: el6
    arch: x86_64
    project: GPP
    local_repo: output
  <<: *rpmbuild

burstio:el6:
  stage: package-burstio-fei
  dependencies:
    - bulkio:el6
  variables:
    dist: el6
    arch: x86_64
    project: burstioInterfaces
    local_repo: output
  <<: *rpmbuild

frontend:el6:
  stage: package-burstio-fei
  dependencies:
    - bulkio:el6
  variables:
    dist: el6
    arch: x86_64
    project: frontendInterfaces
    version: $fei_version
    local_repo: output
  <<: *rpmbuild

redhawk:el7:
  stage: package-redhawk-codegen
  variables:
    dist: el7
    arch: x86_64
    project: redhawk
    specfile: src/releng/redhawk.spec
    local_repo: ""
  <<: *rpmbuild

redhawk-codegen:el7:
  stage: package-redhawk-codegen
  variables:
    dist: el7
    arch: x86_64
    project: redhawk-codegen
    local_repo: ""
  <<: *rpmbuild

bulkio:el7:
  stage: package-bulkio-gpp
  dependencies:
    - redhawk:el7
  variables:
    dist: el7
    arch: x86_64
    project: bulkioInterfaces
    local_repo: output
  <<: *rpmbuild

gpp:el7:
  stage: package-bulkio-gpp
  dependencies:
    - redhawk:el7
  variables:
    dist: el7
    arch: x86_64
    project: GPP
    local_repo: output
  <<: *rpmbuild

burstio:el7:
  stage: package-burstio-fei
  dependencies:
    - bulkio:el7
  variables:
    dist: el7
    arch: x86_64
    project: burstioInterfaces
    local_repo: output
  <<: *rpmbuild

frontend:el7:
  stage: package-burstio-fei
  dependencies:
    - bulkio:el7
  variables:
    dist: el7
    arch: x86_64
    project: frontendInterfaces
    local_repo: output
  <<: *rpmbuild


mvn:deploy:
  stage: package-redhawk-codegen
  image: ${docker_registry}redhawk/buildenv:2.1-el7
  variables:
    OSSIEHOME: /usr/local/redhawk/core
    SDRROOT: /var/redhawk/sdr
    PYTHONPATH: /usr/local/redhawk/core/lib64/python:/usr/local/redhawk/core/lib/python
    LD_LIBRARY_PATH: /usr/local/redhawk/core/lib64:/usr/local/redhawk/core/lib
    PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/redhawk/core/bin
  script:
    - if [ -n "$CI_COMMIT_TAG" ]; then
        rpm_release=`rpm --query --queryformat "%{release}\n" --specfile redhawk/src/releng/redhawk.spec|head -n 1|awk -F. '{print $1}'`;
        for file in `find -name pom.xml`; do
          sed -i "s|$redhawk_version-SNAPSHOT|$redhawk_version-$rpm_release|" $file;
        done
      fi
    - cd redhawk/src
    - sed -i 's|testing||' Makefile.am
    - ./reconf && ./configure && make -j$nproc && make install
    - cd ../../bulkioInterfaces
    - ./reconf && ./configure && make -j$nproc && make install
    - cd ../burstioInterfaces
    - ./reconf && ./configure && make -j$nproc && make install
    - cd ../frontendInterfaces
    - ./reconf && ./configure && make -j$nproc && make install
    - cd ..
    - find -name '*.jar'
    - mvn deploy
  #Skip on tag of following format
  except:
    - /^(\d+\.)?(\d+)?(\.\d+)$/
    - master

deploy:
  image: centos:7
  stage: deploy
  dependencies: []
  before_script:
    - echo "Deploying to $jenkins_url/job/$CI_PROJECT_NAMESPACE/job/$CI_PROJECT_NAME-`basename $CI_COMMIT_REF_NAME`"
  script:
    - if [ -n "$jenkins_url" ]; then
        curl --insecure -X POST $jenkins_url/job/$CI_PROJECT_NAMESPACE/job/$CI_PROJECT_NAME-`basename $CI_COMMIT_REF_NAME`/buildWithParameters?pipeline_id=$CI_PIPELINE_ID --user $jenkins_user:$jenkins_api_token;
      fi
  #Don't build on final tags
  except:
    - /^(\d+\.)?(\d+)?(\.\d+)$/
    - master

#Trigger separate tests pipeline
test-trigger:
  image: centos:7
  stage: deploy
  dependencies: []
  script:
    - curl --insecure -X POST -F ref=$CI_COMMIT_REF_NAME
                              -F token=$test_token
                              -F "variables[triggering_ref]=$CI_COMMIT_SHA"
                              -F "variables[triggering_ref_name]=$CI_COMMIT_REF_NAME"
                              $test_url
  only:
    - branches
  except:
    - master

test-trigger:release:
  image: centos:7
  stage: deploy
  dependencies: []
  variables:
    redhawk_version: '2.1.2'
  script:
    - curl --insecure -X POST -F ref=$redhawk_version
                              -F token=$test_token
                              -F "variables[triggering_ref]=$CI_COMMIT_SHA"
                              -F "variables[triggering_ref_name]=$CI_COMMIT_REF_NAME"
                              $test_url
  only:
    - tags
  #Skip on tag of following format
  except:
    - /^(\d+\.)?(\d+)?(\.\d+)$/
