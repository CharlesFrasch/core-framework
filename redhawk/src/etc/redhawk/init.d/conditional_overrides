#!/bin/bash


# conditional_enabled
#
# conditional_enabled will perform secondary check to resolve
# the enable condition for a service
#
# param
# $1 service name
# $2 enable value from ini file or override, normally ENABLE
# $3 target ini file to resolve conditional override, default /etc/redahwk/rh.cond.cfg
# $4 key to lookup in ini to resolve conditional override, default ENABLE
#
# return
#    0 service is enabled
#    1 service is not enabled
#

. /etc/redhawk/init.d/functions

conditional_enabled() {
    local svc_name_="$1"
    local match_value_="$2"
    local cond_cfg_file_="/etc/redhawk/rh.cond.cfg"
    local cond_field_="ENABLE"

    [[ $# > 2 ]] && [[ ! -z $3 ]] && cond_cfg_file_="$3"
    [[ $# > 3 ]] && [[ ! -z $4 ]] && cond_field_=${4^^}

    # look up enable match in condition file
    unset in_
    unset out_
    local -i in_=0
    local -i out_=0
    if [[ -f $cond_cfg_file_ ]];
    then
	unset cond_cfg_
	declare -A cond_cfg_
	get_ini_section "$cond_cfg_file_" "" cond_cfg_
	
	local cond_target_
        cond_target_=$(resolve_item cond_cfg_ $cond_field_)
        if [[ $? == 0 ]]
        then
	    unset match_values_
	    unset cond_values_
            declare -a cond_values_
            declare -a match_values_
            string_to_list cond_values_ "$cond_target_"
            string_to_list match_values_ "$match_value_"
            for ((i=0; i < ${#match_values_[@]}; i++))
	    do
                for ((j=0; j < ${#cond_values_[@]}; j++))
                do
                    local x="${match_values_[$i]}"
                    local y="${cond_values_[$j]}"
		    if [[ $x == $y ]]
		    then
		        (( in_++ ))
		    else
		        (( out_++ ))
		    fi
                done
	    done
        fi
    fi
    
    [[ $in_ > 0 ]] && return 0 || return 1
}
